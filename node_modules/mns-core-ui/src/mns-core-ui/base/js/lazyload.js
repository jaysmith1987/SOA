export default class Lazyload {

    constructor(loadOffset = 0) {
        this.loadOffset = loadOffset;
    }

    bind() {
        this.imageList = document.querySelectorAll('img[data-original]');

        Array.from(this.imageList).forEach((image) => {
            image.classList.add('loader');
            image.parentNode.classList.add('loader__spinner--image');
        });
    }

    unbind() {
        this.imageList = [];
    }

    load(ignoreVisibility = false, imageList) {

        Array.from(imageList || this.imageList).forEach((image) => {
            if (image.attributes['data-original']
                && (this.isImageVisible(image) || ignoreVisibility)) {

                image.addEventListener('load', function() {
                    this.parentNode.classList.remove('loader__spinner--image');
                    this.removeEventListener('load', this);
                });

                image.src = image.attributes['data-original'].value;
            }
        });
    }

    isImageVisible(image) {
        let boundingRect = image.getBoundingClientRect();

        return (boundingRect.top > 0
        && boundingRect.left >= 0
        && boundingRect.bottom <= (window.innerHeight || document.documentElement.clientHeight) + this.loadOffset
        && boundingRect.right <= (window.innerWidth || document.documentElement.clientWidth));
    }
}