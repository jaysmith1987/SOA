'use strict';

const gulp = require('gulp');
const runSequence = require('run-sequence');
const visualTestingConfig = require('./test/visual/index');
const breakpointConfig = require('./test/visual/breakpoint');
var test,
    docker;

function loadDependencies() {
    test = test || require('mns-core-test').test;
    docker = docker || test.docker.native();
}

gulp.task('visual-testing-setup', function () {
    loadDependencies();
    return docker.setup({
        type: 'selenium-grid',
        scale: ['chrome=5', 'firefox=5']
    });
});

gulp.task('visual-testing-setup-debug', function () {
    loadDependencies();
    return docker.setup({
        type: 'selenium-chrome-debug'
    })
        .then(function () {
            return docker.vnc();
        });
});

gulp.task('visual-testing-teardown', function () {
    loadDependencies();
    return docker.tearDown();
});

gulp.task('test-visual-debug', function (done) {
    runSequence(
        'visual-testing-setup-debug',
        'run-visual-tests',
        'visual-testing-teardown',
        function () {
            done();
            process.exit();
        }
    );
});

gulp.task('test:visual', function (done) {
    runSequence(
        'visual-testing-setup',
        'run-visual-tests',
        'visual-testing-teardown',
        function () {
            done();
            process.exit();
        }
    );
});

gulp.task('run-visual-tests', function (done) {

    loadDependencies();

    let visualTests = test.webdriverio.tasks(visualTestingConfig, breakpointConfig);

    visualTests().then(done);
});

